name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name:  Create env file
        run: |
          echo "${{secrets.SECRET_KEY}}" >> .env
          echo "${{secrets.POSTGRES_PASSWORD}}" >> .env
          echo "${{secrets.BROKER_URL}}" >> .env
          echo "${{secrets.RABBITMQ_DEFAULT_PASS}}" >> .env
          echo  "HOSTNAME=www" >> .env
          echo "RABBITMQ_DEFAULT_USER=www" >> .env
          echo "${{secrets.RESULT_BACKEND}}" >> .env
          echo "${{secrets.DB_USER}}" >> .env
          echo "${{secrets.DB_PASSWORD}}" >> .env
          echo "${{secrets.DB_HOST}}" >> .env
          echo "${{secrets.DB_NAME}}" >> .env
          echo "${{secrets.REDIS_HOST}}" >> .env
          echo "${{secrets.REDIS_PORT}}" >> .env
          echo "${{secrets.REDIS_URI}}" >> .env
          echo $(pwd)



      - name: Run docker-compose
        run: |
          docker-compose -f ././docker-compose.yml up -d
          docker-compose -f ././docker-compose.yml ps
          docker-compose -f ././docker-compose.yml down

      - name: Test and submit coverage report
        run: |
          docker build -t stacktrails:master .
          docker run --rm -v $(pwd)/stacktrails/:/usr/src/stacktrails stacktrails:master ./pytest.sh
          pip install coveralls
          cd stacktrails && coveralls --service=github
